# pip install python-telegram-bot==20.3 MetaTrader5
import MetaTrader5 as mt5
from telegram import Bot, Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import asyncio

# =========================
# CONFIGURATION
# =========================
TELEGRAM_TOKEN = "8067527058:AAFd66Gf3UXUseiGGM725gbZeqwRso2EwBg"
ADMIN_CHAT_ID = 8143587403   # Telegram chat ID (integer)

EXNESS_LOGIN_ID = 12345678      # <-- Exness account ID
EXNESS_PASSWORD = "YourTradingPassword"   # <-- Exness trading password
EXNESS_SERVER = "Exness-Demo3"  # <-- e.g. Exness-Real7 or Exness-Demo3

# =========================
# TELEGRAM BOT COMMANDS
# =========================

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("👋 Hello! Type /menu to see available options.")

async def menu_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "💹 *POWERED_BUY PASIYA-MD FOREX BIT MENU*\n\n"
        "🧠 Commands:\n"
        "/alive - Check bot status\n"
        "/on - Power up auto trading\n"
        "/off - Stop auto trading\n"
        "/profit - Show today's profit\n"
        "\n👑 Admin: PASIDU SAMPATH\n"
        "⚙️ Owner: KAVEESHA DEWMINA\n"
    )
    await update.message.reply_text(text, parse_mode="Markdown")

async def alive_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("✅ *POWERED_BUY PASIYA-MD FOREX BOT ALIVE*", parse_mode="Markdown")

async def on_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("⚡ *POWERED_BUY PASIYA-MD FOREX BOT NOW POWER UP*", parse_mode="Markdown")

async def off_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("🛑 *POWERED_BUY PASIYA-MD FOREX BOT NOW DOWN*", parse_mode="Markdown")

async def profit_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    profit_text = "💰 Today's Profit: $1000 (Demo)"
    await update.message.reply_text(profit_text)

# =========================
# AUTO MESSAGE ON STARTUP
# =========================

async def startup_message(bot: Bot):
    try:
        await bot.send_message(
            chat_id=ADMIN_CHAT_ID,
            text="🚀 POWERED_BUY PASIYA-MD FOREX BOT WRACKING 💹"
        )
        print("✅ Startup message sent successfully.")
    except Exception as e:
        print("❌ Error sending startup message:", e)

# =========================
# EXNESS CONNECT
# =========================
def connect_exness():
    print("Connecting to Exness account...")
    mt5.initialize()
    authorized = mt5.login(EXNESS_LOGIN_ID, EXNESS_PASSWORD, EXNESS_SERVER)
    if authorized:
        print("✅ Exness connection successful.")
    else:
        print("❌ Exness connection failed.")

# =========================
# MAIN ENTRY
# =========================
async def main():
    connect_exness()
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("start", start_command))
    app.add_handler(CommandHandler("menu", menu_command))
    app.add_handler(CommandHandler("alive", alive_command))
    app.add_handler(CommandHandler("on", on_command))
    app.add_handler(CommandHandler("off", off_command))
    app.add_handler(CommandHandler("profit", profit_command))

    await startup_message(app.bot)  # 🔥 Send message when bot starts

    print("🤖 Bot is running... (Press CTRL+C to stop)")
    await app.run_polling()

if __name__ == "__main__":
    asyncio.run(main())
